/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ru.tinkoff.bpm.pledge.submission.registration.process;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class StartPmpEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -30785362566304605L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StartPmpEvent\",\"namespace\":\"ru.tinkoff.bpm.pledge.submission.registration.process\",\"fields\":[{\"name\":\"appIntId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"parentIntId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"pledgeIntId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"partnerId\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StartPmpEvent> ENCODER =
      new BinaryMessageEncoder<StartPmpEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StartPmpEvent> DECODER =
      new BinaryMessageDecoder<StartPmpEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<StartPmpEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<StartPmpEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<StartPmpEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StartPmpEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this StartPmpEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a StartPmpEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a StartPmpEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static StartPmpEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String appIntId;
  @Deprecated public java.lang.String parentIntId;
  @Deprecated public java.lang.String pledgeIntId;
  @Deprecated public int partnerId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StartPmpEvent() {}

  /**
   * All-args constructor.
   * @param appIntId The new value for appIntId
   * @param parentIntId The new value for parentIntId
   * @param pledgeIntId The new value for pledgeIntId
   * @param partnerId The new value for partnerId
   */
  public StartPmpEvent(java.lang.String appIntId, java.lang.String parentIntId, java.lang.String pledgeIntId, java.lang.Integer partnerId) {
    this.appIntId = appIntId;
    this.parentIntId = parentIntId;
    this.pledgeIntId = pledgeIntId;
    this.partnerId = partnerId;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return appIntId;
    case 1: return parentIntId;
    case 2: return pledgeIntId;
    case 3: return partnerId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: appIntId = value$ != null ? value$.toString() : null; break;
    case 1: parentIntId = value$ != null ? value$.toString() : null; break;
    case 2: pledgeIntId = value$ != null ? value$.toString() : null; break;
    case 3: partnerId = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'appIntId' field.
   * @return The value of the 'appIntId' field.
   */
  public java.lang.String getAppIntId() {
    return appIntId;
  }


  /**
   * Sets the value of the 'appIntId' field.
   * @param value the value to set.
   */
  public void setAppIntId(java.lang.String value) {
    this.appIntId = value;
  }

  /**
   * Gets the value of the 'parentIntId' field.
   * @return The value of the 'parentIntId' field.
   */
  public java.lang.String getParentIntId() {
    return parentIntId;
  }


  /**
   * Sets the value of the 'parentIntId' field.
   * @param value the value to set.
   */
  public void setParentIntId(java.lang.String value) {
    this.parentIntId = value;
  }

  /**
   * Gets the value of the 'pledgeIntId' field.
   * @return The value of the 'pledgeIntId' field.
   */
  public java.lang.String getPledgeIntId() {
    return pledgeIntId;
  }


  /**
   * Sets the value of the 'pledgeIntId' field.
   * @param value the value to set.
   */
  public void setPledgeIntId(java.lang.String value) {
    this.pledgeIntId = value;
  }

  /**
   * Gets the value of the 'partnerId' field.
   * @return The value of the 'partnerId' field.
   */
  public int getPartnerId() {
    return partnerId;
  }


  /**
   * Sets the value of the 'partnerId' field.
   * @param value the value to set.
   */
  public void setPartnerId(int value) {
    this.partnerId = value;
  }

  /**
   * Creates a new StartPmpEvent RecordBuilder.
   * @return A new StartPmpEvent RecordBuilder
   */
  public static ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder newBuilder() {
    return new ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder();
  }

  /**
   * Creates a new StartPmpEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StartPmpEvent RecordBuilder
   */
  public static ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder newBuilder(ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder other) {
    if (other == null) {
      return new ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder();
    } else {
      return new ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder(other);
    }
  }

  /**
   * Creates a new StartPmpEvent RecordBuilder by copying an existing StartPmpEvent instance.
   * @param other The existing instance to copy.
   * @return A new StartPmpEvent RecordBuilder
   */
  public static ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder newBuilder(ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent other) {
    if (other == null) {
      return new ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder();
    } else {
      return new ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for StartPmpEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StartPmpEvent>
    implements org.apache.avro.data.RecordBuilder<StartPmpEvent> {

    private java.lang.String appIntId;
    private java.lang.String parentIntId;
    private java.lang.String pledgeIntId;
    private int partnerId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.appIntId)) {
        this.appIntId = data().deepCopy(fields()[0].schema(), other.appIntId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.parentIntId)) {
        this.parentIntId = data().deepCopy(fields()[1].schema(), other.parentIntId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.pledgeIntId)) {
        this.pledgeIntId = data().deepCopy(fields()[2].schema(), other.pledgeIntId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[3].schema(), other.partnerId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing StartPmpEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.appIntId)) {
        this.appIntId = data().deepCopy(fields()[0].schema(), other.appIntId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.parentIntId)) {
        this.parentIntId = data().deepCopy(fields()[1].schema(), other.parentIntId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pledgeIntId)) {
        this.pledgeIntId = data().deepCopy(fields()[2].schema(), other.pledgeIntId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.partnerId)) {
        this.partnerId = data().deepCopy(fields()[3].schema(), other.partnerId);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'appIntId' field.
      * @return The value.
      */
    public java.lang.String getAppIntId() {
      return appIntId;
    }


    /**
      * Sets the value of the 'appIntId' field.
      * @param value The value of 'appIntId'.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder setAppIntId(java.lang.String value) {
      validate(fields()[0], value);
      this.appIntId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'appIntId' field has been set.
      * @return True if the 'appIntId' field has been set, false otherwise.
      */
    public boolean hasAppIntId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'appIntId' field.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder clearAppIntId() {
      appIntId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentIntId' field.
      * @return The value.
      */
    public java.lang.String getParentIntId() {
      return parentIntId;
    }


    /**
      * Sets the value of the 'parentIntId' field.
      * @param value The value of 'parentIntId'.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder setParentIntId(java.lang.String value) {
      validate(fields()[1], value);
      this.parentIntId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'parentIntId' field has been set.
      * @return True if the 'parentIntId' field has been set, false otherwise.
      */
    public boolean hasParentIntId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'parentIntId' field.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder clearParentIntId() {
      parentIntId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'pledgeIntId' field.
      * @return The value.
      */
    public java.lang.String getPledgeIntId() {
      return pledgeIntId;
    }


    /**
      * Sets the value of the 'pledgeIntId' field.
      * @param value The value of 'pledgeIntId'.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder setPledgeIntId(java.lang.String value) {
      validate(fields()[2], value);
      this.pledgeIntId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'pledgeIntId' field has been set.
      * @return True if the 'pledgeIntId' field has been set, false otherwise.
      */
    public boolean hasPledgeIntId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'pledgeIntId' field.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder clearPledgeIntId() {
      pledgeIntId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'partnerId' field.
      * @return The value.
      */
    public int getPartnerId() {
      return partnerId;
    }


    /**
      * Sets the value of the 'partnerId' field.
      * @param value The value of 'partnerId'.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder setPartnerId(int value) {
      validate(fields()[3], value);
      this.partnerId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'partnerId' field has been set.
      * @return True if the 'partnerId' field has been set, false otherwise.
      */
    public boolean hasPartnerId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'partnerId' field.
      * @return This builder.
      */
    public ru.tinkoff.bpm.pledge.submission.registration.process.StartPmpEvent.Builder clearPartnerId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StartPmpEvent build() {
      try {
        StartPmpEvent record = new StartPmpEvent();
        record.appIntId = fieldSetFlags()[0] ? this.appIntId : (java.lang.String) defaultValue(fields()[0]);
        record.parentIntId = fieldSetFlags()[1] ? this.parentIntId : (java.lang.String) defaultValue(fields()[1]);
        record.pledgeIntId = fieldSetFlags()[2] ? this.pledgeIntId : (java.lang.String) defaultValue(fields()[2]);
        record.partnerId = fieldSetFlags()[3] ? this.partnerId : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StartPmpEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<StartPmpEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StartPmpEvent>
    READER$ = (org.apache.avro.io.DatumReader<StartPmpEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.appIntId);

    if (this.parentIntId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.parentIntId);
    }

    out.writeString(this.pledgeIntId);

    out.writeInt(this.partnerId);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.appIntId = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.parentIntId = null;
      } else {
        this.parentIntId = in.readString();
      }

      this.pledgeIntId = in.readString();

      this.partnerId = in.readInt();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.appIntId = in.readString();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.parentIntId = null;
          } else {
            this.parentIntId = in.readString();
          }
          break;

        case 2:
          this.pledgeIntId = in.readString();
          break;

        case 3:
          this.partnerId = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










