/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ru.tinkoff.bpm.topdsssigningprocess.model.sign;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SignedDocument extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6559947294917454357L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SignedDocument\",\"namespace\":\"ru.tinkoff.bpm.topdsssigningprocess.model.sign\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"SignedDocumentType\",\"symbols\":[\"MORTGAGE_AGREEMENT\",\"APPLICATION_FORM\",\"INDIVIDUAL_CONDITIONS\",\"CLIENT_APPLICATION_ROSREESTR\",\"BANK_APPLICATION_ROSREESTR\",\"CONTAINER_DESCRIPTION\"]}},{\"name\":\"documentUri\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"signatureUri\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SignedDocument> ENCODER =
      new BinaryMessageEncoder<SignedDocument>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SignedDocument> DECODER =
      new BinaryMessageDecoder<SignedDocument>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SignedDocument> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SignedDocument> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SignedDocument> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SignedDocument>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SignedDocument to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SignedDocument from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SignedDocument instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SignedDocument fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType type;
  @Deprecated public java.lang.String documentUri;
  @Deprecated public java.lang.String signatureUri;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SignedDocument() {}

  /**
   * All-args constructor.
   * @param type The new value for type
   * @param documentUri The new value for documentUri
   * @param signatureUri The new value for signatureUri
   */
  public SignedDocument(ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType type, java.lang.String documentUri, java.lang.String signatureUri) {
    this.type = type;
    this.documentUri = documentUri;
    this.signatureUri = signatureUri;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return documentUri;
    case 2: return signatureUri;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType)value$; break;
    case 1: documentUri = value$ != null ? value$.toString() : null; break;
    case 2: signatureUri = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'documentUri' field.
   * @return The value of the 'documentUri' field.
   */
  public java.lang.String getDocumentUri() {
    return documentUri;
  }


  /**
   * Sets the value of the 'documentUri' field.
   * @param value the value to set.
   */
  public void setDocumentUri(java.lang.String value) {
    this.documentUri = value;
  }

  /**
   * Gets the value of the 'signatureUri' field.
   * @return The value of the 'signatureUri' field.
   */
  public java.lang.String getSignatureUri() {
    return signatureUri;
  }


  /**
   * Sets the value of the 'signatureUri' field.
   * @param value the value to set.
   */
  public void setSignatureUri(java.lang.String value) {
    this.signatureUri = value;
  }

  /**
   * Creates a new SignedDocument RecordBuilder.
   * @return A new SignedDocument RecordBuilder
   */
  public static ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder newBuilder() {
    return new ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder();
  }

  /**
   * Creates a new SignedDocument RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SignedDocument RecordBuilder
   */
  public static ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder newBuilder(ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder other) {
    if (other == null) {
      return new ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder();
    } else {
      return new ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder(other);
    }
  }

  /**
   * Creates a new SignedDocument RecordBuilder by copying an existing SignedDocument instance.
   * @param other The existing instance to copy.
   * @return A new SignedDocument RecordBuilder
   */
  public static ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder newBuilder(ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument other) {
    if (other == null) {
      return new ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder();
    } else {
      return new ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder(other);
    }
  }

  /**
   * RecordBuilder for SignedDocument instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SignedDocument>
    implements org.apache.avro.data.RecordBuilder<SignedDocument> {

    private ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType type;
    private java.lang.String documentUri;
    private java.lang.String signatureUri;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.documentUri)) {
        this.documentUri = data().deepCopy(fields()[1].schema(), other.documentUri);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.signatureUri)) {
        this.signatureUri = data().deepCopy(fields()[2].schema(), other.signatureUri);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing SignedDocument instance
     * @param other The existing instance to copy.
     */
    private Builder(ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.documentUri)) {
        this.documentUri = data().deepCopy(fields()[1].schema(), other.documentUri);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.signatureUri)) {
        this.signatureUri = data().deepCopy(fields()[2].schema(), other.signatureUri);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder setType(ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentUri' field.
      * @return The value.
      */
    public java.lang.String getDocumentUri() {
      return documentUri;
    }


    /**
      * Sets the value of the 'documentUri' field.
      * @param value The value of 'documentUri'.
      * @return This builder.
      */
    public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder setDocumentUri(java.lang.String value) {
      validate(fields()[1], value);
      this.documentUri = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'documentUri' field has been set.
      * @return True if the 'documentUri' field has been set, false otherwise.
      */
    public boolean hasDocumentUri() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'documentUri' field.
      * @return This builder.
      */
    public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder clearDocumentUri() {
      documentUri = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'signatureUri' field.
      * @return The value.
      */
    public java.lang.String getSignatureUri() {
      return signatureUri;
    }


    /**
      * Sets the value of the 'signatureUri' field.
      * @param value The value of 'signatureUri'.
      * @return This builder.
      */
    public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder setSignatureUri(java.lang.String value) {
      validate(fields()[2], value);
      this.signatureUri = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'signatureUri' field has been set.
      * @return True if the 'signatureUri' field has been set, false otherwise.
      */
    public boolean hasSignatureUri() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'signatureUri' field.
      * @return This builder.
      */
    public ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocument.Builder clearSignatureUri() {
      signatureUri = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SignedDocument build() {
      try {
        SignedDocument record = new SignedDocument();
        record.type = fieldSetFlags()[0] ? this.type : (ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType) defaultValue(fields()[0]);
        record.documentUri = fieldSetFlags()[1] ? this.documentUri : (java.lang.String) defaultValue(fields()[1]);
        record.signatureUri = fieldSetFlags()[2] ? this.signatureUri : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SignedDocument>
    WRITER$ = (org.apache.avro.io.DatumWriter<SignedDocument>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SignedDocument>
    READER$ = (org.apache.avro.io.DatumReader<SignedDocument>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.type.ordinal());

    if (this.documentUri == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.documentUri);
    }

    if (this.signatureUri == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.signatureUri);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.type = ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.documentUri = null;
      } else {
        this.documentUri = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.signatureUri = null;
      } else {
        this.signatureUri = in.readString();
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.type = ru.tinkoff.bpm.topdsssigningprocess.model.sign.SignedDocumentType.values()[in.readEnum()];
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.documentUri = null;
          } else {
            this.documentUri = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.signatureUri = null;
          } else {
            this.signatureUri = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










